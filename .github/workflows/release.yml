name: Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: deb
            package_task: packageDeb
          - os: windows-latest
            artifact_name: msi
            package_task: packageMsi
          - os: macos-latest
            artifact_name: dmg
            package_task: packageDmg

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Make gradlew executable
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Build and Package
        run: ./gradlew ${{ matrix.package_task }}

      - name: Find Package
        id: find-package
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            echo "package_path=$(find app/build/compose/binaries -name "*.msi" -type f | head -n 1)" >> $GITHUB_OUTPUT
          elif [ "${{ runner.os }}" == "macOS" ]; then
            echo "package_path=$(find app/build/compose/binaries -name "*.dmg" -type f | head -n 1)" >> $GITHUB_OUTPUT
          else
            echo "package_path=$(find app/build/compose/binaries -name "*.deb" -type f | head -n 1)" >> $GITHUB_OUTPUT
          fi

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: focus-timer-${{ matrix.artifact_name }}
          path: ${{ steps.find-package.outputs.package_path }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.find-package.outputs.package_path }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 